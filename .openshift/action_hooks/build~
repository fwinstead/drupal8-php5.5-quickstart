#!/bin/bash

# build Drupal 8 site on Openshift
# 	runs on initial build and whenever user does a git push
NOW=$(date "+%Y_%m_%d_%H_%M")

# ## ### #### ##### #### ### ## # ????????????????????
# tell httpd to use our httpd.conf file	NEEDS: work. Is PassEnv needed?
export HTTPD_ARGUMENT="-f ${OPENSHIFT_REPO_DIR}conf/httpd.conf"
# Included by httpd.conf
# https://httpd.apache.org/docs/2.4/env.html
env|>${OPENSHIFT_TMP_DIR}httpd_temp.conf awk 'BEGIN{FS="="} $1 ~ /^OPENSHIFT/ {print "PassEnv", $1}'
# ## ### #### ##### #### ### ## # ????????????????????

# ## ### #### ##### #### ### ## #
# Check for Downloads
DOWNLOAD_LOG_FILE="/tmp/download_${NOW}.log"
bash ${OPENSHIFT_REPO_DIR}misc/download.sh > ${DOWNLOAD_LOG_FILE} 2>&1
# ## ### #### ##### #### ### ## #

# ## ### #### ##### #### ### ## #
# make PHP if needed


# ## ### #### ##### #### ### ## #



# start building
DRUPAL_INSTALL_LOG_FILE="/tmp/drupal_install_log"
PHP_MAKE_LOG_FILE="/tmp/php_make_log"
PHP_MAKE_PID_FILE="/tmp/php_make_pid"
PHP_MAKE_PID=$(cat "${PHP_MAKE_PID_FILE}" 2> /dev/null) # get PID if exists

# check to see if build is already running (PID file empty OR proccess no longer exists)
if [ \! "${PHP_MAKE_PID}" ] || [ \! -f "/proc/${PHP_MAKE_PID}/stat" ]
then
	# start in background: make PHP
	nohup bash ${OPENSHIFT_REPO_DIR}misc/php_make.sh > ${PHP_MAKE_LOG_FILE} 2>&1 &
	echo "$!" > ${PHP_MAKE_PID_FILE} ; echo -e "\t$(date) PHP make started."
	# start in background: install latest Drupal
	nohup bash ${OPENSHIFT_REPO_DIR}misc/drupal_install.sh > ${DRUPAL_INSTALL_LOG_FILE} 2>&1 &
	echo -e "\tDrupal install started."
else
	echo -e "\tBuild is already in progress, pid: ${PHP_MAKE_PID}"
	ps -ef | grep "${PHP_MAKE_PID}"
fi

exit

